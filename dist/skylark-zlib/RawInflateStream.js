/**
 * skylark-zlib - A version of zlib.js that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-zlib/
 * @license MIT
 */
define(["./zlib","./huffman"],function(t,i){const s=!0;var e,r=i.buildHuffmanTable,a=function(t,i,e){this.blocks=[],this.bufferSize=e||32768,this.totalpos=0,this.ip=void 0===i?0:i,this.bitsbuf=0,this.bitsbuflen=0,this.input=s?new Uint8Array(t):t,this.output=new(s?Uint8Array:Array)(this.bufferSize),this.op=0,this.bfinal=!1,this.blockLength,this.resize=!1,this.litlenTable,this.distTable,this.sp=0,this.status=a.Status.INITIALIZED,this.ip_,this.bitsbuflen_,this.bitsbuf_};return a.BlockType={UNCOMPRESSED:0,FIXED:1,DYNAMIC:2},a.Status={INITIALIZED:0,BLOCK_HEADER_START:1,BLOCK_HEADER_END:2,BLOCK_BODY_START:3,BLOCK_BODY_END:4,DECODE_BLOCK_START:5,DECODE_BLOCK_END:6},a.prototype.decompress=function(t,i){var s=!1;for(void 0!==t&&(this.input=t),void 0!==i&&(this.ip=i);!s;)switch(this.status){case a.Status.INITIALIZED:case a.Status.BLOCK_HEADER_START:this.readBlockHeader()<0&&(s=!0);break;case a.Status.BLOCK_HEADER_END:case a.Status.BLOCK_BODY_START:switch(this.currentBlockType){case a.BlockType.UNCOMPRESSED:this.readUncompressedBlockHeader()<0&&(s=!0);break;case a.BlockType.FIXED:this.parseFixedHuffmanBlock()<0&&(s=!0);break;case a.BlockType.DYNAMIC:this.parseDynamicHuffmanBlock()<0&&(s=!0)}break;case a.Status.BLOCK_BODY_END:case a.Status.DECODE_BLOCK_START:switch(this.currentBlockType){case a.BlockType.UNCOMPRESSED:this.parseUncompressedBlock()<0&&(s=!0);break;case a.BlockType.FIXED:case a.BlockType.DYNAMIC:this.decodeHuffman()<0&&(s=!0)}break;case a.Status.DECODE_BLOCK_END:this.bfinal?s=!0:this.status=a.Status.INITIALIZED}return this.concatBuffer()},a.MaxBackwardLength=32768,a.MaxCopyLength=258,a.Order=(e=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],s?new Uint16Array(e):e),a.LengthCodeTable=function(t){return s?new Uint16Array(t):t}([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258]),a.LengthExtraTable=function(t){return s?new Uint8Array(t):t}([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0]),a.DistCodeTable=function(t){return s?new Uint16Array(t):t}([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577]),a.DistExtraTable=function(t){return s?new Uint8Array(t):t}([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),a.FixedLiteralLengthTable=function(){var t,i,e=new(s?Uint8Array:Array)(288);for(t=0,i=e.length;t<i;++t)e[t]=t<=143?8:t<=255?9:t<=279?7:8;return r(e)}(),a.FixedDistanceTable=function(){var t,i,e=new(s?Uint8Array:Array)(30);for(t=0,i=e.length;t<i;++t)e[t]=5;return r(e)}(),a.prototype.readBlockHeader=function(){var t;if(this.status=a.Status.BLOCK_HEADER_START,this.save_(),(t=this.readBits(3))<0)return this.restore_(),-1;switch(1&t&&(this.bfinal=!0),t>>>=1){case 0:this.currentBlockType=a.BlockType.UNCOMPRESSED;break;case 1:this.currentBlockType=a.BlockType.FIXED;break;case 2:this.currentBlockType=a.BlockType.DYNAMIC;break;default:throw new Error("unknown BTYPE: "+t)}this.status=a.Status.BLOCK_HEADER_END},a.prototype.readBits=function(t){for(var i,s=this.bitsbuf,e=this.bitsbuflen,r=this.input,a=this.ip;e<t;){if(r.length<=a)return-1;s|=(i=r[a++])<<e,e+=8}return i=s&(1<<t)-1,s>>>=t,e-=t,this.bitsbuf=s,this.bitsbuflen=e,this.ip=a,i},a.prototype.readCodeByTable=function(t){for(var i,s,e=this.bitsbuf,r=this.bitsbuflen,a=this.input,n=this.ip,h=t[0],u=t[1];r<u;){if(a.length<=n)return-1;e|=a[n++]<<r,r+=8}if((s=(i=h[e&(1<<u)-1])>>>16)>r)throw new Error("invalid code length: "+s);return this.bitsbuf=e>>s,this.bitsbuflen=r-s,this.ip=n,65535&i},a.prototype.readUncompressedBlockHeader=function(){var t,i=this.input,s=this.ip;if(this.status=a.Status.BLOCK_BODY_START,s+4>=i.length)return-1;if((t=i[s++]|i[s++]<<8)===~(i[s++]|i[s++]<<8))throw new Error("invalid uncompressed block header: length verify");this.bitsbuf=0,this.bitsbuflen=0,this.ip=s,this.blockLength=t,this.status=a.Status.BLOCK_BODY_END},a.prototype.parseUncompressedBlock=function(){var t=this.input,i=this.ip,s=this.output,e=this.op,r=this.blockLength;for(this.status=a.Status.DECODE_BLOCK_START;r--;){if(e===s.length&&(s=this.expandBuffer({fixRatio:2})),i>=t.length)return this.ip=i,this.op=e,this.blockLength=r+1,-1;s[e++]=t[i++]}return r<0&&(this.status=a.Status.DECODE_BLOCK_END),this.ip=i,this.op=e,0},a.prototype.parseFixedHuffmanBlock=function(){return this.status=a.Status.BLOCK_BODY_START,this.litlenTable=a.FixedLiteralLengthTable,this.distTable=a.FixedDistanceTable,this.status=a.Status.BLOCK_BODY_END,0},a.prototype.save_=function(){this.ip_=this.ip,this.bitsbuflen_=this.bitsbuflen,this.bitsbuf_=this.bitsbuf},a.prototype.restore_=function(){this.ip=this.ip_,this.bitsbuflen=this.bitsbuflen_,this.bitsbuf=this.bitsbuf_},a.prototype.parseDynamicHuffmanBlock=function(){var t,i,e,n,h=new(s?Uint8Array:Array)(a.Order.length);if(this.status=a.Status.BLOCK_BODY_START,this.save_(),t=this.readBits(5)+257,i=this.readBits(5)+1,e=this.readBits(4)+4,t<0||i<0||e<0)return this.restore_(),-1;try{(function(){var u,o,f,p,l,c,b=0;for(l=0;l<e;++l){if((u=this.readBits(3))<0)throw new Error("not enough input");h[a.Order[l]]=u}for(n=r(h),p=new(s?Uint8Array:Array)(t+i),l=0,c=t+i;l<c;){if((o=this.readCodeByTable(n))<0)throw new Error("not enough input");switch(o){case 16:if((u=this.readBits(2))<0)throw new Error("not enough input");for(f=3+u;f--;)p[l++]=b;break;case 17:if((u=this.readBits(3))<0)throw new Error("not enough input");for(f=3+u;f--;)p[l++]=0;b=0;break;case 18:if((u=this.readBits(7))<0)throw new Error("not enough input");for(f=11+u;f--;)p[l++]=0;b=0;break;default:p[l++]=o,b=o}}new(s?Uint8Array:Array)(t),new(s?Uint8Array:Array)(i),this.litlenTable=r(s?p.subarray(0,t):p.slice(0,t)),this.distTable=r(s?p.subarray(t):p.slice(t))}).call(this)}catch(t){return this.restore_(),-1}return this.status=a.Status.BLOCK_BODY_END,0},a.prototype.decodeHuffman=function(){var t,i,s,e,r,n=this.output,h=this.op,u=this.litlenTable,o=this.distTable,f=n.length;for(this.status=a.Status.DECODE_BLOCK_START;;){if(this.save_(),(t=this.readCodeByTable(u))<0)return this.op=h,this.restore_(),-1;if(256===t)break;if(t<256)h===f&&(f=(n=this.expandBuffer()).length),n[h++]=t;else{if(i=t-257,e=a.LengthCodeTable[i],a.LengthExtraTable[i]>0){if((r=this.readBits(a.LengthExtraTable[i]))<0)return this.op=h,this.restore_(),-1;e+=r}if((t=this.readCodeByTable(o))<0)return this.op=h,this.restore_(),-1;if(s=a.DistCodeTable[t],a.DistExtraTable[t]>0){if((r=this.readBits(a.DistExtraTable[t]))<0)return this.op=h,this.restore_(),-1;s+=r}for(h+e>=f&&(f=(n=this.expandBuffer()).length);e--;)n[h]=n[h++-s];if(this.ip===this.input.length)return this.op=h,-1}}for(;this.bitsbuflen>=8;)this.bitsbuflen-=8,this.ip--;this.op=h,this.status=a.Status.DECODE_BLOCK_END},a.prototype.expandBuffer=function(t){var i,e,r,a=this.input.length/this.ip+1|0,n=this.input,h=this.output;return t&&("number"==typeof t.fixRatio&&(a=t.fixRatio),"number"==typeof t.addRatio&&(a+=t.addRatio)),e=a<2?(r=(n.length-this.ip)/this.litlenTable[2]/2*258|0)<h.length?h.length+r:h.length<<1:h.length*a,s?(i=new Uint8Array(e)).set(h):i=h,this.output=i,this.output},a.prototype.concatBuffer=function(){var t,i,e=this.op;return t=this.resize?s?new Uint8Array(this.output.subarray(this.sp,e)):this.output.slice(this.sp,e):s?this.output.subarray(this.sp,e):this.output.slice(this.sp,e),this.sp=e,e>a.MaxBackwardLength+this.bufferSize&&(this.op=this.sp=a.MaxBackwardLength,s?(i=this.output,this.output=new Uint8Array(this.bufferSize+a.MaxBackwardLength),this.output.set(i.subarray(e-a.MaxBackwardLength,e))):this.output=this.output.slice(e-a.MaxBackwardLength)),t},t.RawInflateStream=a});
//# sourceMappingURL=sourcemaps/RawInflateStream.js.map
